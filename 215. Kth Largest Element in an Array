class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int left = 0, right = nums.size()-1;
        while(true){
            int pos = partition(nums, left,right);
            if(pos==k-1) return nums[pos];
            else if (pos>k-1) right = pos-1;
            else left = pos+1;
        }        
    }
    int partition(vector<int>&nums, int left, int right ){
        int pivot = nums[right], i = left;
        for (int j = left; j<=right-1; j++ ){
            if (nums[j]>=pivot){
                swap(&nums[i], &nums[j]);
                i++;
            }
        }
        swap(&nums[i], &nums[right]);
        return i;  
    }
    void swap(int *a, int *b){
    int temp = *a;
    *a = *b;
    *b = temp;
    }
};
