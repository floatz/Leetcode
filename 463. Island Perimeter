//https://leetcode.com/problems/island-perimeter/#/description
// find how many "1" in the matrix, say m  and how many "1"s are connected, say n, the final is 4*m - n/2;
class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {   
        int n = grid.size();
        int m = grid[0].size();
        int count = 0, overlap = 0;
        for (int i=0;i<n; i++){
            for (int j=0;j<m;j++){
                if (grid[i][j] == 1) {
                    count++;
                    if (i+1<n&&grid[i+1][j]==1) overlap++;
                    if (i-1>=0&&grid[i-1][j]==1) overlap++;
                    if (j-1>=0&&grid[i][j-1]==1) overlap++;
                    if (j+1<m&&grid[i][j+1]==1) overlap++;
                }
            }
        }
        return 4*count - overlap;
    }
};
