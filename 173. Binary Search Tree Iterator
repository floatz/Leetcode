/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class BSTIterator {
public:
    BSTIterator(TreeNode *root) {
        while(root){
            s.push(root);
            root = root->left;
        }
    }

    /** @return whether we have a next smallest number */
    bool hasNext() {
        return !s.empty();
    }

    /** @return the next smallest number */
    int next() {
        TreeNode *tmp = s.top();
        s.pop();
        int res = tmp->val;
        if(tmp->right){
            tmp = tmp->right;
            while(tmp){
                s.push(tmp);
                tmp = tmp->left;
            }
        }
        return res;
    }
private:
    stack<TreeNode*> s;
};
